---
import "./styles.css";
---
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Carbon</title>
  </head>
  <body class="font-sans">
    <nav class="fixed top-0 left-0 right-0 z-50 flex items-center justify-between border-b border-white/10 bg-[rgba(15,15,35,0.8)] px-8 py-4 backdrop-blur-xl animate-slideDown">
        <div class="text-2xl font-extrabold tracking-tighter bg-gradient-to-r from-cyan-400 to-blue-500 bg-clip-text text-transparent">CARBON</div>
        <div class="hamburger" onclick="toggleMenu()">
            <span></span>
            <span></span>
            <span></span>
        </div>
    </nav>

    
    <aside id="mobileMenu" class="fixed top-0 -right-full z-40 h-screen w-[300px] border-l border-white/10 bg-[rgba(15,15,35,0.95)] p-8 pt-24 backdrop-blur-xl transition-all duration-300 ease-in-out">
        <a href="#home" class="mobile-menu-item relative block overflow-hidden border-b border-white/10 py-4 text-lg font-semibold text-white no-underline transition-all duration-300 ease-in-out hover:pl-4 hover:text-cyan-400">Home</a>
        <a href="#games" class="mobile-menu-item relative block overflow-hidden border-b border-white/10 py-4 text-lg font-semibold text-white no-underline transition-all duration-300 ease-in-out hover:pl-4 hover:text-cyan-400">Games</a>
        <a href="#proxy" class="mobile-menu-item relative block overflow-hidden border-b border-white/10 py-4 text-lg font-semibold text-white no-underline transition-all duration-300 ease-in-out hover:pl-4 hover:text-cyan-400">Proxy</a>
    </aside>


    <div id="overlay" class="fixed inset-0 z-30 h-full w-full bg-black/50 invisible opacity-0 transition-all duration-300 ease-in-out" onclick="closeMenu()"></div>

    <!-- Animated background blobs -->
    <div class="blob blob1"></div>
    <div class="blob blob2"></div>
    <div class="blob blob3"></div>

    <main class="relative flex min-h-screen flex-col items-center justify-center p-8 pt-24">
      <slot/>
    </main>

    <footer class="py-4 text-center text-white/50">
      Made with ❤️ by <a href="https://github.com/Carbon-Services" target="_blank" class="text-cyan-400 hover:underline">Carbon Services</a>
    </footer>

    <script is:inline async defer>
        
        function toggleMenu() {
            const hamburger = document.querySelector('.hamburger');
            const mobileMenu = document.getElementById('mobileMenu');
            const overlay = document.getElementById('overlay');
            
            hamburger.classList.toggle('active');
            mobileMenu.classList.toggle('right-0');
            mobileMenu.classList.toggle('-right-full');
            overlay.classList.toggle('opacity-100');
            overlay.classList.toggle('visible');
            overlay.classList.toggle('opacity-0');
            overlay.classList.toggle('invisible');
        }

        function closeMenu() {
            const hamburger = document.querySelector('.hamburger');
            const mobileMenu = document.getElementById('mobileMenu');
            const overlay = document.getElementById('overlay');
            
            hamburger.classList.remove('active');
            mobileMenu.classList.add('-right-full');
            mobileMenu.classList.remove('right-0');
            overlay.classList.add('opacity-0', 'invisible');
            overlay.classList.remove('opacity-100', 'visible');
        }

        
        document.querySelectorAll('.mobile-menu-item').forEach(item => {
            item.addEventListener('click', closeMenu);
        });

       
        function createParticles(event) {
            const logo = event.currentTarget;
            const rect = logo.getBoundingClientRect();
            
            for (let i = 0; i < 12; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                
                const size = Math.random() * 8 + 4;
                particle.style.width = size + 'px';
                particle.style.height = size + 'px';
                
                const angle = (i / 12) * Math.PI * 2;
                const distance = Math.random() * 60 + 30;
                
                particle.style.left = (rect.left + rect.width / 2) + 'px';
                particle.style.top = (rect.top + rect.height / 2) + 'px';
                
                document.body.appendChild(particle);
                
                // Animate particle
                setTimeout(() => {
                    particle.style.transform = `translate(${Math.cos(angle) * distance}px, ${Math.sin(angle) * distance - 50}px) scale(0)`;
                    particle.style.opacity = '0';
                }, 10);
                
                // Remove particle
                setTimeout(() => {
                    particle.remove();
                }, 3000);
            }
        }

        // Blob button animation
        function blobAnimation(event) {
            const button = event.currentTarget;
            const rect = button.getBoundingClientRect();
            
            // Create ripple effect
            const ripple = document.createElement('div');
            ripple.style.position = 'absolute';
            ripple.style.borderRadius = '50%';
            ripple.style.background = 'rgba(255, 255, 255, 0.6)';
            ripple.style.transform = 'scale(0)';
            ripple.style.animation = 'ripple 0.6s linear';
            ripple.style.left = '50%';
            ripple.style.top = '50%';
            ripple.style.width = '20px';
            ripple.style.height = '20px';
            ripple.style.marginLeft = '-10px';
            ripple.style.marginTop = '-10px';
            
            button.appendChild(ripple);
            
            setTimeout(() => {
                ripple.remove();
            }, 600);
        }

        
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);

        
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth'
                    });
                }
            });
        });

        
        document.addEventListener('mousemove', (e) => {
            const mouseX = e.clientX / window.innerWidth;
            const mouseY = e.clientY / window.innerHeight;
            
            const blobs = document.querySelectorAll('.blob');
            blobs.forEach((blob, index) => {
                const speed = (index + 1) * 0.5;
                const x = (mouseX - 0.5) * speed;
                const y = (mouseY - 0.5) * speed;
                
                blob.style.transform = `translate(${x}px, ${y}px)`;
            });
        });
    </script>
  </body>
</html>
